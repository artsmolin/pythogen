openapi: 3.1.0
info:
  title: test server
  version: 0.1.0
paths:
  /objects/no-ref-schema/{object_id}:
    get:
      tags:
        - test
      summary: Get Object No Ref Schema
      operationId: get_object_no_ref_schema
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
        - required: false
          schema:
            title: Return Error
            type: string
          name: return_error
          in: query
        - required: true
          schema: { title: From, type: string, description: __safety_key__(from_) }
          name: from
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: GetObjectResp
                type: object
                properties:
                  string_data:
                    title: String Data
                    type: string
                    description: "String Data. [__discriminator__(BaseObjectResp.string_data)]"
                  integer_data:
                    title: Integer Data
                    type: integer
                  array_data:
                    title: Array Data
                    type: array
                    items:
                      type: string
                  boolean_data:
                    title: Boolean Data
                    type: boolean
                additionalProperties: false
  /objects/{object_id}:
    get:
      tags:
        - test
      summary: Get Object
      operationId: get_object
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
        - required: false
          schema:
            title: Return Error
            type: string
          name: return_error
          in: query
        - required: true
          schema: { title: From, type: string, description: __safety_key__(from_) }
          name: from
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectResp'
        '500':
          description: Unknown Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownError'
    delete:
      tags:
        - test
      summary: Delete Object
      operationId: delete_object
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteObjectResp'
    put:
      tags:
        - test
      summary: Put Object
      operationId: put_object
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutObjectData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutObjectResp'

    patch:
      tags:
        - test
      summary: Patch Object
      operationId: patch_object
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patch-Object_Data'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchObjectResp'
  /post-without-body:
    post:
      tags:
        - test
      summary: Post Object Without Body
      operationId: post_object_without_body
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostObjectResp'
  /object-with-array-response:
    get:
      tags:
        - test
      summary: Get Object With Inline Array
      operationId: get_object_with_array_response
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required: [pricePlanCode, quantity]
                  properties:
                    pricePlanCode:
                      type: string
                    quantity:
                      type: number
  /object-with-inline-array:
    get:
      tags:
        - test
      summary: Get Object With Inline Array
      operationId: get_object_with_inline_array
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      required: [pricePlanCode, quantity]
                      properties:
                        pricePlanCode:
                          type: string
                        quantity:
                          type: number
  /objects:
    get:
      tags:
        - test
      summary: Get list objects
      operationId: get_list_objects
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetObjectResp'
    post:
      tags:
        - test
      summary: Post Object
      operationId: post_object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostObjectData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostObjectResp'
  /text:
    get:
      tags:
        - test
      summary: Get Text
      operationId: get_text
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                type: string
  /text_as_integer:
    get:
      tags:
        - test
      summary: Get Text As Integer
      operationId: get_text_as_integer
      responses:
        '200':
          description: Successful Response
          content:
            text/plain:
              schema:
                type: integer
  /empty:
    get:
      tags:
        - test
      summary: Get Empty
      operationId: get_empty
      parameters:
        - required: true
          schema:
            title: First Header
            type: string
          name: first-header
          in: header
      responses:
        '200':
          description: Successful Response

  /no-operation-id:
    get:
      tags:
        - test
      summary: No operation ID
      parameters:
        - required: true
          schema:
            title: First Header
            type: string
          name: first-header
          in: header
      responses:
        '200':
          description: Successful Response
  /binary:
    get:
      tags:
        - test
      summary: Get Binary
      operationId: get_binary
      responses:
        '200':
          description: Successful Response
          content:
            application/binary:
              schema:
                type: string
                format: binary
  /allof:
    get:
      tags:
        - test
      summary: Get Allof
      operationId: get_allof
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllOfResp'
  /objects-form-data:
    post:
      tags:
        - test
      summary: Post Form Object
      operationId: post_form_object
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostObjectData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostObjectResp'
  /multipart-form-data:
    post:
      tags:
      - test
      summary: Post Multipart Form Data
      operationId: post_multipart_form_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PostFile"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostObjectResp'
  /slow/objects/{object_id}:
    get:
      tags:
        - test
      summary: Get Object Slow
      operationId: get_object_slow
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
        - required: false
          schema:
            title: Return Error
            type: string
          name: return_error
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetObjectResp'
        '500':
          description: Unknown Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnknownError'
    put:
      tags:
        - test
      summary: Put Object Slow
      operationId: put_object_slow
      parameters:
        - required: true
          schema:
            title: Object Id
            type: string
          name: object_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutObjectData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutObjectResp'
  /request-body-anyof:
    post:
      tags:
        - test
      summary: Post Object With Request Body AnyOf
      operationId: request_body_anyof
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/Data'
                - $ref: '#/components/schemas/PostObjectData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostObjectResp'
  /nested-any-of:
    get:
      tags:
        - test
      summary: Post Object With Request Body AnyOf
      operationId: response_body_list_of_anyof
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAnyOfResp'
components:
  schemas:
    AllOfResp:
      title: All Of Resp
      type: object
      properties:
        all_of:
          title: All Of
          allOf:
            - $ref: '#/components/schemas/Data'
            - $ref: '#/components/schemas/Cat'
            - type: object
              properties:
                bark:
                  type: boolean
                breed:
                  type: string
                  enum: [Dingo, Husky, Retriever, Shepherd]
    Data:
      title: Data
      type: object
      properties:
        id:
          title: id
          type: string
        data:
          title: Data
          type: integer
      additionalProperties: false
    Cat:
      title: Cat
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
    Dog:
      title: Dog
      type: object
      properties:
        name:
          title: name
          type: string
      additionalProperties: false
    AnyOfChildItem:
      title: AnyOfChildItem
      type: object
      anyOf:
        - {$ref: '#/components/schemas/Dog'}
        - {$ref: '#/components/schemas/Cat'}
        - type: integer
    GetObjectResp:
      title: GetObjectResp
      type: object
      properties:
        string_data:
          title: String Data
          type: string
          description: "String Data. [__discriminator__(BaseObjectResp.string_data)]"
        integer_data:
          title: Integer Data
          type: integer
        array_data:
          title: Array Data
          type: array
          items:
            type: string
        boolean_data:
          title: Boolean Data
          type: boolean
        tier:
          type: object
          properties:
            code:
              type: string
            name:
              type: string
            priority:
              type: integer
        anyOfChild:
          type: object
          anyOf:
            - {$ref: '#/components/schemas/GetObjectResp'}
            - {$ref: '#/components/schemas/Cat'}
        child:
          $ref: '#/components/schemas/GetObjectResp'
        childs:
          type: array
          items:
            $ref: '#/components/schemas/GetObjectResp'
        animal:
          type: object
          anyOf:
            - {$ref: '#/components/schemas/Cat'}
            - {$ref: '#/components/schemas/Dog'}
      additionalProperties: false
    PostObjectData:
      title: PostObjectData
      required:
        - string_data
        - integer_data
        - array_data
        - boolean_data
        - event-data
      type: object
      properties:
        optional_anyof_string_data:
          anyOf:
          - {type: string}
          - {type: 'null'}
        string_data:
          title: String Data
          type: string
        integer_data:
          title: Integer Data
          type: integer
        array_data:
          title: Array Data
          type: array
          items:
            type: string
        boolean_data:
          title: Boolean Data
          type: boolean
        event-data:
          title: Event-Data
          type: object
          description: __safety_key__(event_data)
        date_attr:
          type: string
          format: date
        datetime_attr:
          type: string
          format: date-time
        url:
          type: string
          format: uri
        int_enum: 
          $ref: '#/components/schemas/IntegerEnum'
        str_enum: 
          $ref: '#/components/schemas/StringEnum'
        int_enum_or_null:
          anyOf:
            - {'$ref': '#/components/schemas/IntegerEnum'}
            - {'type': 'null'}
      additionalProperties: false
    IntegerEnum:
      description: An enumeration.
      enum: [1, 2, 3, 4, 5, 6]
      title: IntegerEnum
      type: integer
      additionalProperties: false
    StringEnum:
      description: An enumeration.
      enum: [first-field, "second field"]
      title: StringEnum
      type: string
      additionalProperties: false
    Patch-Object_Data:
      title: Patch-Object_Data
      required:
        - id
        - data
      type: object
      properties:
        id:
          title: ID
          type: string
        data:
          title: Data
          type: integer
      additionalProperties: false
    PutObjectData:
      title: PutObjectData
      required:
        - id
        - data
      type: object
      properties:
        id:
          title: ID
          type: string
        data:
          title: Data
          type: integer
      additionalProperties: false
    PostFile:
      title: PostFile
      required:
        - text
      type: object
      properties:
        text:
          type: string
    PostObjectResp:
      title: PostObjectResp
      type: object
      properties:
        status:
          title: Status
          type: string
          default: OK
      additionalProperties: false
    PatchObjectResp:
      title: PatchObjectResp
      type: object
      properties:
        status:
          title: Status
          type: string
          default: OK
      additionalProperties: false
    PutObjectResp:
      title: PutObjectResp
      type: object
      properties:
        status:
          title: Status
          type: string
          default: OK
      additionalProperties: false
    DeleteObjectResp:
      title: DeleteObjectResp
      type: object
      properties:
        status:
          title: Status
          type: string
          default: OK
      additionalProperties: false
    UnknownError:
      title: UnknownError
      type: object
      properties:
        code:
          title: Code
          type: string
          default: unknown_error
      additionalProperties: false
    SafetyKeyForTesting:
      title: model for testing safety key
      type: object
      properties:
        for:
          title: For
          type: string
          description: reserved word, expecting "for_"
        class:
          title: Class
          type: string
          description: reserved word, expecting "class_"
        33with.dot-and-hyphens&*:
          title: With dot, hyphens and garbage
          type: integer
          description: invalid identifier, expecting "with_dot_and_hyphens"
        34with.dot-and-hyphens&*:
          title: With dot, hyphens and garbage
          type: integer
          description: __safety_key__(old_feature_priority) invalid identifier, expecting "old_feature_priority"
    ListAnyOfResp:
      title: PostObjectResp
      type: object
      properties:
        anyOfChildArray:
          type: array
          items: {$ref: '#/components/schemas/AnyOfChildItem'}
      additionalProperties: false
